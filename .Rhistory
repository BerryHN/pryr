ls(e, all.names = TRUE)
?bind
environment(list())
funenv <- function(f) {
f <- match.fun(f)
environment(f)
}
funenv("mean")
where("mean")
where <- function(name, env = parent.frame()) {
if (identical(env, emptyenv())) {
stop("Can't find ", name, call. = FALSE)
}
if (name %in% ls(env, all.names = TRUE)) {
env
} else {
where(name, parent.env(env))
}
}
where("mean")
funenv("t.test")
where("t.test")
length(ls(funenv("t.test")))
length(ls(where("t.test")))
f <- function(x) {
list(
e = environment(),
p = parent.env(environment())
)
}
f()
f()
funenv(f)
f <- function(x) {
list(
e = environment(),
p = parent.env(environment())
)
}
f()
f()
funenv("f")
f <- function(x) {
function() {
x
}
}
g <- f(10)
x <- 20
g()
f <- function(x) {
function() {
def <- get("x", environment())
cll <- get("x", parent.frame())
list(def = def, cll = cll)
}
}
g <- f(10)
x <- 20
g()
f <- function(x) g(x)
g <- function(x) h(x)
h <- function(x) i(x)
i <- function(x) sys.calls()
f()
f(10)
i <- function(x) parent.frames()
f()
?pari <- function(x) sys.frames()
i <- function(x) sys.frames()
f()
y <- 10
f <- function(x, y) {
x <- 1
g(x, y)
}
g <- function(x, y) {
x <- 2
h(x, y)
}
h <- function(x, y) {
x <- 3
i(x, y)
}
i <- function(x, y) sys.frames()
e <- i()
lapply(e, get, "x")
?get
lapply(e, get, x = "x")
es <- i()
lapply(es, function(e) get("x", e))
?get
es
es <- f()
es
es[[1]]
get("x", es[[1]])
lapply(es, function(e) get("x", e))
i()
lapply(es, function(e) get("y", e))
y <- 10
f <- function(x) {
x <- 1
g(x, y)
}
g <- function(x) {
x <- 2
h(x, y)
}
h <- function(x) {
x <- 3
i(x, y)
}
i <- function(x) {
x <- 4
sys.frames()
}
es <- f()
lapply(es, function(e) get("x", e))
lapply(es, function(e) get("y", e))
y <- 10
f <- function(x) {
x <- 1
g(x)
}
g <- function(x) {
x <- 2
h(x)
}
h <- function(x) {
x <- 3
i(x)
}
i <- function(x) {
x <- 4
sys.frames()
}
es <- f()
lapply(es, function(e) get("x", e))
lapply(es, function(e) get("y", e))
local2 <- function(expr, envir = new.env()) {
env <- parent.frame()
call <- substitute(eval(quote(expr), envir))
eval(call, env)
}
local2({
a <- 1
get <<- function() a
set <<- function(value) a <<- value
})
get()
set(10)
a
get()
local2({
a <- 1
my_get <<- function() a
my_set <<- function(value) a <<- value
})
my_get()
my_set(10)
a
my_get()
local2 <- function(expr, envir = new.env()) {
env <- parent.frame()
call <- substitute(eval(quote(expr), envir))
browser()
eval(call, env)
}
local2({
a <- 1
my_get <<- function() a
my_set <<- function(value) a <<- value
})
call
substitute(eval(quote(expr), envir), environment())
a <- 1
local2({
b <- a + 1
my_get <<- function() b
})
my_get()
Q
a <- 1
local2({
b <- a + 1
my_get <<- function() b
})
my_get()
Q
local2 <- function(expr, envir = new.env()) {
env <- parent.frame()
call <- substitute(eval(quote(expr), envir),
list(expr = expr, envir = envir))
eval(call, env)
}
local3 <- function(expr, envir = new.env()) {
eval(substitute(expr), env)
}
a <- 1
local2({
b <- a + 1
my_get <<- function() b
})
my_get()
a <- 10
my_get()
local3({
b <- a + 1
my_get <<- function() b
})
local3 <- function(expr, envir = new.env()) {
eval(substitute(expr), envir)
}
local3({
b <- a + 1
my_get <<- function() b
})
my_get()
a
b
local2 <- function(expr, envir = new.env()) {
env <- parent.frame()
call <- substitute(eval(quote(expr), envir),
list(expr = expr, envir = envir))
eval(call, env)
}
local3 <- function(expr, envir = new.env()) {
eval(substitute(expr), envir)
}
a <- 1
local2({
b <- a + 1
my_get <<- function() b
})
my_get()
local3({
b <- a + 1
my_get <<- function() b
})
my_get()
b <- 10
my_get()
a <- 10
local2({
b <- a + 1
my_get <<- function() b
})
my_get()
local3({
b <- a + 1
my_get <<- function() b
})
my_get()
?new.env
local3 <- function(expr, envir = new.env()) {
b <- 20
eval(substitute(expr), envir)
}
a <- 1
local2({
b <- a + 1
my_get <<- function() b
})
my_get()
local3({
b <- a + 1
my_get <<- function() b
})
my_get()
?local
a <- 1
local2({
b <- a + 1
my_get <<- function() b
})
my_get()
local3({
b <- a + 1
my_get <<- function() b
})
my_get()
a <- 100
local2({
b <- a + sample(10)
my_get <<- function() b
})
my_get()
my_get()
local3({
b <- a + sample(10)
my_get <<- function() b
})
my_get()
my_get()
sample(10)
sample(10:)
sample(10L)
sample(10L, 1)
a <- 100
local2({
b <- a + sample(10, 1)
my_get <<- function() b
})
my_get()
my_get()
local3({
b <- a + sample(10, 1)
my_get <<- function() b
})
my_get()
my_get()
a <- 100
local2({
b <- a + sample(10, 1)
my_get <<- function() b
}, new.env(emptyenv()))
my_get()
my_get()
?new.env
a <- 100
local2({
b <- a + sample(10, 1)
my_get <<- function() b
}, new.env(parent = emptyenv()))
my_get()
my_get()
local3({
b <- a + sample(10, 1)
my_get <<- function() b
}, new.env(parent = emptyenv()))
my_get()
my_get()
?eval
load_all()
f <- function(x) {
uneval(x)
}
f(a + b)
uneval <- function(x) {
name <- substitute(x)
stopifnot(is.name(name))
env <- parent.frame()
if (!is_promise2(name, env)) {
stop(name, "is not a promise", call. = FALSE)
}
.Call("promise_code", name, env)
}
f <- function(x) {
uneval(x)
}
f(a + b)
?delayedAssign
delayedAssign("x", quote(1 + 4))
load_all()
document()
document()
load_all()
delayedAssign("x", quote(1 + 4))
uneval(x)
f <- function(x) {
uneval(x)
}
f(a + b)
x
x
f <- function(x) {
uneval(x)
}
f(a + b)
delayedAssign("x", 1 + 4)
uneval(x)
alist(a = , b = 1)
f <- function(x) x + 3
g <- make_function(alist(x = ), quote(x + 3))
f
identical(f, g)
g
f
body(f)
body(g)
identical(body(f), body(g))
str(f)
str(g)
identical(formals(f), formals(g))
identical(formals(f), formals(g))
identical(body(f), body(g))
identical(environment(f), environment(g))
attr(f, "srcref") <- NULL
identical(f, g)
document()
as.pairlist(x)
as.pairlist(5)
names(x)
unnamed <- function(x) {
is.null(names(x)) || any(names(x) == "")
}
unnamed(x)
unnamed(c(x=  1)
unnamed(c(x=  1))
unnamed(c(x=  1, ))
unnamed(c(x=  1, 2))
has_all_names <- function(x) {
!is.null(names(x)) && all(names(x) != "")
}
load_all()
g <- make_function(alist(x = ), quote(x + 3))
make_function(5)
make_function(5, quote(a))
eval
x <- quote(a + b)
substitute(x, list(a = 1, b = 2))
substitute2(x, list(a = 1, b = 2))
x
load_all()
substitute2(x, list(a = 1, b = 2))
call
?substitute
eval(call)
Q
load_all()
substitute2(x, list(a = 1, b = 2))
load_all()
substitute2(x, list(a = 1, b = 2))
load_all()
substitute2(x, list(a = 1, b = 2))
document()
load_all()
document()
make_function
substitute2(x, NULL)
":" <- 5
:(1,4 )
rm(":")
git st
document()
load_all()
where(abc)
where("abc")
where("where")
document()
?delayedAssign
x %<a-% runif(1) #>
x
x
?makeActiveBinding
x %<a-% runif(1) #>
load_all()
x %<a-% runif(1) #>
load_all()
x %<a-% runif(1) #>
all_named(list())
all_named(list())
load_all()
all_named(list())
x %<a-% runif(1) #>
rm(x)
x %<d-% runif(1)
x
x
x
x
x %<a-% runif(1) #>
?rm
?exists
load_all()
x %<a-% runif(1) #>
load_all()
x %<a-% runif(1) #>
x %<a-% runif(1) #>
x
x
x
x %<a-% runif(10) #>
x
x
x
x
x <- 5
load_all()
x <- 5
x
x %<a-% runif(10) #>
x <- 5
x
load_all()
document()
load_all()
x %<d-% a + b
a <- 10
b <- 100
load_all()
x %<d-% a + b
load_all()
x %<d-% a + b
load_all()
x %<d-% a + b
a
b
x
rm("x")
x %<d-% a + b
x
x %<d-% a + b
a <- 10
b <- 100
x
setwd("~/Documents/devtools/pryr")
load_all()
clean_dll()
load_all()
dev_help("unenclose")
